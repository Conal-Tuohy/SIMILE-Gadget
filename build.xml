<!--+
    |
    |               +=======================+
    |               |  Gadget Build System  |
    |               +=======================+
    |
    +-->

<project name="Gadget" default="package" basedir=".">

	<!-- === Initialization Targets ============================================= -->
	    <target name="init">

	    <!-- Set the timestamps -->
	    <tstamp/>

	    <!-- Allow users a chance to override without editing the main file -->
	    <property file="${user.home}/gadget.build.properties"/>
	    <property file="local.build.properties"/>

	    <!-- Get the build properties from an external file -->
	    <property file="build.properties"/>

	    <filter token="Name" value="${fullname}"/>
	    <filter token="name" value="${fullname}"/>
	    <filter token="year" value="${year}"/>
	    <filter token="version" value="${version}"/>
	    <filter token="date" value="${TODAY}"/>
	    
	    <!-- Set classpath -->
	    <path id="classpath">
	      <fileset dir="${lib}">
	        <include name="*.jar"/>
	      </fileset>
	      <fileset dir="${lib.endorsed}">
	        <include name="*.jar"/>
	      </fileset>
	      <path location="${build.dest}"/>
	    </path>

	  </target>

	<!-- === Preparation Targets ============================================= -->

	  <target name="prepare" depends="init">
	    <mkdir dir="${build}"/>
	  </target>

	  <target name="prepare-dist" depends="init">
	    <mkdir dir="${dist}"/>
	  </target>
	
	<!-- === Compiler Targets ================================================= -->

	  <target name="compile" depends="prepare">
	    <mkdir dir="${build.dest}"/>

	    <javac srcdir="${src}"
	           destdir="${build.dest}"
	           debug="${compiler.debug}"
	           optimize="${compiler.optimize}"
	           deprecation="${compiler.deprecation}"
	           target="1.3"
	           nowarn="${compiler.nowarn}"
	           compiler="${compiler}"
	           classpathref="classpath"/>
	           
	  </target>

	<!-- === Package Targets ================================================= -->

	  <target name="package" depends="compile" description="Create the bytecode package">
		<!-- Generate relative classpath for jar file -->
		<pathconvert dirsep="/" pathsep=" " property="Class-Path">
			<map from="${basedir}/${lib}/" to=""/>
		    <map from="${basedir}\${lib}\" to=""/>
			<path>
                <fileset dir="${lib}">
                    <include name="*.jar" />
                </fileset>
            </path>
        </pathconvert>
	  		  	
	    <jar jarfile="${lib}/${name}.jar" basedir="${build.dest}">
            <manifest>
                <attribute name="Main-Class" value="${mainclass}"/>
                <attribute name="Class-Path" value="${Class-Path}" />
            </manifest>
	    </jar>
	  </target>

	<!-- === Distribution Targets ================================================= -->

    <target name="dist" depends="prepare-dist,package" description="Create the distribution">
    	  <copy todir="${dist}/docs">
    	  	<fileset dir="${docs}"/>
    	  </copy>
  	  <copy todir="${dist}/legal">
	  	<fileset dir="${legal}"/>
	  </copy>
    	  <copy todir="${dist}/lib">
	  	<fileset dir="${lib}"/>
	  </copy>
  	  <copy todir="${dist}/src">
	  	<fileset dir="${src}"/>
	  </copy>
  	  <!--copy todir="${dist}/docs/api">
	  	<fileset dir="${build.javadocs}"/>
	  </copy-->
  	  <copy todir="${dist}">
  	  	<fileset dir="${basedir}">
  	  	   <include name="build.*"/>
  	  	   <include name="gadget.*"/>
  	  	   <include name="*.txt"/>
  	  	</fileset>
  	  </copy>
      <chmod file="${dist}/gadget.sh" perm="+x"/>
    	
    	  <fixcrlf srcdir="${dist}" includes="**.sh" eol="lf"/>

    	  <zip zipfile="${dist.target}/${dist.name}.zip" basedir="${dist.root}" 
    	       includes="${dist.name}/**">
    	  </zip>

    	  <tar tarfile="${dist.target}/${dist.name}.tar" longfile="gnu">
    	         <tarfileset dir="${dist.root}">
    	             <include name="${dist.name}/**"/>
    	             <exclude name="${dist.name}/gadget.sh"/>
    	         </tarfileset>
    	         <tarfileset dir="${dist.root}" mode="755">
    	             <include name="${dist.name}/gadget.sh"/>
    	         </tarfileset>
    	    </tar>
    	    <gzip zipfile="${dist.target}/${dist.name}.tar.gz" src="${dist.target}/${dist.name}.tar"/>
    	    <delete file="${dist.target}/${dist.name}.tar"/>
    </target>

    	<!-- === Clean Targets =================================================== -->

    	  <target name="clean" depends="init" description="Remove all created artifacts.">
    	      <delete dir="${build}"/>
    	      <delete dir="${dist}"/>
    	  </target>
	
</project>
